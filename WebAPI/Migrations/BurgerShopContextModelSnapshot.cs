// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WebAPI.Data;

#nullable disable

namespace WebAPI.Migrations
{
    [DbContext(typeof(BurgerShopContext))]
    partial class BurgerShopContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.14")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ProjetoLDS.Models.ContaUtilizador", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Username")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ContaUtilizador");
                });

            modelBuilder.Entity("ProjetoLDS.Models.ItemCompra", b =>
                {
                    b.Property<string>("Name")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Preco")
                        .HasColumnType("int");

                    b.HasKey("Name");

                    b.ToTable("ItemCompras");

                    b.HasDiscriminator<string>("Discriminator").HasValue("ItemCompra");

                    b.UseTphMappingStrategy();
                });

            modelBuilder.Entity("ProjetoLDS.Models.ItemPedido", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ItemCompraName")
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("PedidoId")
                        .HasColumnType("int");

                    b.Property<int>("Preco")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ItemCompraName");

                    b.HasIndex("PedidoId");

                    b.ToTable("ItemPedidos");
                });

            modelBuilder.Entity("WebAPI.Models.EditIngredientes", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<string>("IngredienteName")
                        .IsRequired()
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("ItemName")
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("ItemPedidoId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("IngredienteName");

                    b.HasIndex("ItemName");

                    b.HasIndex("ItemPedidoId");

                    b.ToTable("EditIngredientes");
                });

            modelBuilder.Entity("WebAPI.Models.Ingrediente", b =>
                {
                    b.Property<string>("Name")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Image")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ItemName")
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("Price")
                        .HasColumnType("int");

                    b.Property<int>("Stock")
                        .HasColumnType("int");

                    b.Property<int>("TypeComida")
                        .HasColumnType("int");

                    b.HasKey("Name");

                    b.HasIndex("ItemName");

                    b.ToTable("Ingredientes");
                });

            modelBuilder.Entity("WebAPI.Models.IngredienteAtribuido", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ItemName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("IngredienteAtribuidos");
                });

            modelBuilder.Entity("WebAPI.Models.Menu", b =>
                {
                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Name");

                    b.ToTable("Menus");
                });

            modelBuilder.Entity("WebAPI.Models.Pedido", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ContaUtilizadorId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Data")
                        .HasColumnType("datetime2");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ContaUtilizadorId");

                    b.ToTable("Pedidos");
                });

            modelBuilder.Entity("WebAPI.Models.Ticket", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ContaUtilizadorId")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<string>("Texto")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Titulo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ContaUtilizadorId");

                    b.ToTable("Ticket");
                });

            modelBuilder.Entity("WebAPI.Models.Item", b =>
                {
                    b.HasBaseType("ProjetoLDS.Models.ItemCompra");

                    b.Property<string>("MenuName")
                        .HasColumnType("nvarchar(450)");

                    b.HasIndex("MenuName");

                    b.HasDiscriminator().HasValue("Item");
                });

            modelBuilder.Entity("ProjetoLDS.Models.ItemPedido", b =>
                {
                    b.HasOne("ProjetoLDS.Models.ItemCompra", "ItemCompra")
                        .WithMany()
                        .HasForeignKey("ItemCompraName");

                    b.HasOne("WebAPI.Models.Pedido", null)
                        .WithMany("ItensPedido")
                        .HasForeignKey("PedidoId");

                    b.Navigation("ItemCompra");
                });

            modelBuilder.Entity("WebAPI.Models.EditIngredientes", b =>
                {
                    b.HasOne("WebAPI.Models.Ingrediente", "Ingrediente")
                        .WithMany()
                        .HasForeignKey("IngredienteName")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WebAPI.Models.Item", "Item")
                        .WithMany()
                        .HasForeignKey("ItemName");

                    b.HasOne("ProjetoLDS.Models.ItemPedido", null)
                        .WithMany("EditIngredientes")
                        .HasForeignKey("ItemPedidoId");

                    b.Navigation("Ingrediente");

                    b.Navigation("Item");
                });

            modelBuilder.Entity("WebAPI.Models.Ingrediente", b =>
                {
                    b.HasOne("WebAPI.Models.Item", null)
                        .WithMany("Ingredientes")
                        .HasForeignKey("ItemName");
                });

            modelBuilder.Entity("WebAPI.Models.Pedido", b =>
                {
                    b.HasOne("ProjetoLDS.Models.ContaUtilizador", "ContaUtilizador")
                        .WithMany()
                        .HasForeignKey("ContaUtilizadorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ContaUtilizador");
                });

            modelBuilder.Entity("WebAPI.Models.Ticket", b =>
                {
                    b.HasOne("ProjetoLDS.Models.ContaUtilizador", "ContaUtilizador")
                        .WithMany()
                        .HasForeignKey("ContaUtilizadorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ContaUtilizador");
                });

            modelBuilder.Entity("WebAPI.Models.Item", b =>
                {
                    b.HasOne("WebAPI.Models.Menu", null)
                        .WithMany("Items")
                        .HasForeignKey("MenuName");
                });

            modelBuilder.Entity("ProjetoLDS.Models.ItemPedido", b =>
                {
                    b.Navigation("EditIngredientes");
                });

            modelBuilder.Entity("WebAPI.Models.Menu", b =>
                {
                    b.Navigation("Items");
                });

            modelBuilder.Entity("WebAPI.Models.Pedido", b =>
                {
                    b.Navigation("ItensPedido");
                });

            modelBuilder.Entity("WebAPI.Models.Item", b =>
                {
                    b.Navigation("Ingredientes");
                });
#pragma warning restore 612, 618
        }
    }
}
